@using Microsoft.AspNetCore.SignalR.Client
@inherits LayoutComponentBase
@inject ISnackbar Snackbar
<MudThemeProvider />
<MudPopoverProvider />
<MudSnackbarProvider/>
<div class="page">
    <div>
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <MudBadge Content="count" Color="Color.Primary" Overlap="true" OnClick="ShowNotifications" Class="mx-6 my-4">
                <MudIcon Icon="@Icons.Material.Filled.Email" @onclick="ShowNotifications" Color="Color.Default" />
            </MudBadge>
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private int count { get; set; } = 0;
    private HubConnection? hubConnection;
    private List<string> messages = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
        .WithUrl("https://localhost:5001/studentHub")
        .WithAutomaticReconnect()
        .Build();

        hubConnection.On<string>("DeleteMessage", async (m) =>
        {
            messages.Add(m);
            count = messages.Count;
            await InvokeAsync(StateHasChanged);
        });

        hubConnection.On<string>("UpdateMessage", async (m) =>
       {
           messages.Add(m);
           count = messages.Count;
           await InvokeAsync(StateHasChanged);
       });

        await hubConnection.StartAsync();
    }

    public void ShowNotifications()
    {   

        foreach(var message in messages)
        {
            Snackbar.Add(message, Severity.Info);
        }
        messages.Clear();
        count = 0;
    }

}
